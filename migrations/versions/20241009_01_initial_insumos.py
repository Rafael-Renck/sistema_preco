"""create cbhpm teto, insumos and triggers

Revision ID: 20241009_01
Revises: 
Create Date: 2024-10-09 00:00:00

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '20241009_01'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


insumo_origem_enum = sa.Enum('BRAS', 'SIMPRO', name='insumo_origem')


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        'cbhpm_teto',
        sa.Column('codigo', sa.String(length=100), nullable=False),
        sa.Column('descricao', sa.String(length=500), nullable=True),
        sa.Column('valor_total', sa.Numeric(12, 2), nullable=False),
        sa.Column('versao_ref', sa.String(length=100), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False, server_default=sa.text('CURRENT_TIMESTAMP'), server_onupdate=sa.text('CURRENT_TIMESTAMP')),
        sa.PrimaryKeyConstraint('codigo', name='pk_cbhpm_teto')
    )

    op.create_table(
        'bras_item',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('tuss', sa.String(length=50), nullable=True),
        sa.Column('tiss', sa.String(length=50), nullable=True),
        sa.Column('anvisa', sa.String(length=50), nullable=True),
        sa.Column('descricao', sa.String(length=500), nullable=False),
        sa.Column('preco', sa.Numeric(12, 4), nullable=True),
        sa.Column('fabricante', sa.String(length=255), nullable=True),
        sa.Column('versao_tabela', sa.String(length=100), nullable=True),
        sa.Column('data_atualizacao', sa.Date(), nullable=True),
        sa.Column('created_at', sa.DateTime(), nullable=False, server_default=sa.text('CURRENT_TIMESTAMP')),
        sa.Column('updated_at', sa.DateTime(), nullable=False, server_default=sa.text('CURRENT_TIMESTAMP'), server_onupdate=sa.text('CURRENT_TIMESTAMP')),
        sa.PrimaryKeyConstraint('id', name='pk_bras_item')
    )
    op.create_index('ix_bras_item_anvisa', 'bras_item', ['anvisa'], unique=False)
    op.create_index('ix_bras_item_descricao', 'bras_item', ['descricao'], unique=False)
    op.create_index('ix_bras_item_tiss', 'bras_item', ['tiss'], unique=False)
    op.create_index('ix_bras_item_tuss', 'bras_item', ['tuss'], unique=False)

    op.create_table(
        'simpro_item',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('tuss', sa.String(length=50), nullable=True),
        sa.Column('tiss', sa.String(length=50), nullable=True),
        sa.Column('anvisa', sa.String(length=50), nullable=True),
        sa.Column('descricao', sa.String(length=500), nullable=False),
        sa.Column('preco', sa.Numeric(12, 4), nullable=True),
        sa.Column('fabricante', sa.String(length=255), nullable=True),
        sa.Column('versao_tabela', sa.String(length=100), nullable=True),
        sa.Column('data_atualizacao', sa.Date(), nullable=True),
        sa.Column('created_at', sa.DateTime(), nullable=False, server_default=sa.text('CURRENT_TIMESTAMP')),
        sa.Column('updated_at', sa.DateTime(), nullable=False, server_default=sa.text('CURRENT_TIMESTAMP'), server_onupdate=sa.text('CURRENT_TIMESTAMP')),
        sa.PrimaryKeyConstraint('id', name='pk_simpro_item')
    )
    op.create_index('ix_simpro_item_anvisa', 'simpro_item', ['anvisa'], unique=False)
    op.create_index('ix_simpro_item_descricao', 'simpro_item', ['descricao'], unique=False)
    op.create_index('ix_simpro_item_tiss', 'simpro_item', ['tiss'], unique=False)
    op.create_index('ix_simpro_item_tuss', 'simpro_item', ['tuss'], unique=False)

    insumo_origem_enum.create(op.get_bind(), checkfirst=True)

    op.create_table(
        'insumos_index',
        sa.Column('origem', insumo_origem_enum, nullable=False),
        sa.Column('item_id', sa.Integer(), nullable=False),
        sa.Column('tuss', sa.String(length=50), nullable=True),
        sa.Column('tiss', sa.String(length=50), nullable=True),
        sa.Column('descricao', sa.String(length=500), nullable=True),
        sa.Column('preco', sa.Numeric(12, 4), nullable=True),
        sa.Column('fabricante', sa.String(length=255), nullable=True),
        sa.Column('anvisa', sa.String(length=50), nullable=True),
        sa.Column('versao_tabela', sa.String(length=100), nullable=True),
        sa.Column('data_atualizacao', sa.Date(), nullable=True),
        sa.Column('updated_at', sa.DateTime(), nullable=False, server_default=sa.text('CURRENT_TIMESTAMP'), server_onupdate=sa.text('CURRENT_TIMESTAMP')),
        sa.PrimaryKeyConstraint('origem', 'item_id', name='pk_insumos_index'),
        sa.Index('ix_insumos_index_anvisa', 'anvisa'),
        sa.Index('ix_insumos_index_descricao', 'descricao'),
        sa.Index('ix_insumos_index_tiss', 'tiss'),
        sa.Index('ix_insumos_index_tuss', 'tuss')
    )

    # Triggers for bras_item
    op.execute(
        """
        CREATE TRIGGER trg_bras_item_ai
        AFTER INSERT ON bras_item
        FOR EACH ROW
        BEGIN
            INSERT INTO insumos_index (origem, item_id, tuss, tiss, descricao, preco, fabricante, anvisa, versao_tabela, data_atualizacao, updated_at)
            VALUES ('BRAS', NEW.id, NEW.tuss, NEW.tiss, NEW.descricao, NEW.preco, NEW.fabricante, NEW.anvisa, NEW.versao_tabela, NEW.data_atualizacao, NOW())
            ON DUPLICATE KEY UPDATE
                tuss = NEW.tuss,
                tiss = NEW.tiss,
                descricao = NEW.descricao,
                preco = NEW.preco,
                fabricante = NEW.fabricante,
                anvisa = NEW.anvisa,
                versao_tabela = NEW.versao_tabela,
                data_atualizacao = NEW.data_atualizacao,
                updated_at = NOW();
        END
        """
    )
    op.execute(
        """
        CREATE TRIGGER trg_bras_item_au
        AFTER UPDATE ON bras_item
        FOR EACH ROW
        BEGIN
            INSERT INTO insumos_index (origem, item_id, tuss, tiss, descricao, preco, fabricante, anvisa, versao_tabela, data_atualizacao, updated_at)
            VALUES ('BRAS', NEW.id, NEW.tuss, NEW.tiss, NEW.descricao, NEW.preco, NEW.fabricante, NEW.anvisa, NEW.versao_tabela, NEW.data_atualizacao, NOW())
            ON DUPLICATE KEY UPDATE
                tuss = NEW.tuss,
                tiss = NEW.tiss,
                descricao = NEW.descricao,
                preco = NEW.preco,
                fabricante = NEW.fabricante,
                anvisa = NEW.anvisa,
                versao_tabela = NEW.versao_tabela,
                data_atualizacao = NEW.data_atualizacao,
                updated_at = NOW();
        END
        """
    )

    # Triggers for simpro_item
    op.execute(
        """
        CREATE TRIGGER trg_simpro_item_ai
        AFTER INSERT ON simpro_item
        FOR EACH ROW
        BEGIN
            INSERT INTO insumos_index (origem, item_id, tuss, tiss, descricao, preco, fabricante, anvisa, versao_tabela, data_atualizacao, updated_at)
            VALUES ('SIMPRO', NEW.id, NEW.tuss, NEW.tiss, NEW.descricao, NEW.preco, NEW.fabricante, NEW.anvisa, NEW.versao_tabela, NEW.data_atualizacao, NOW())
            ON DUPLICATE KEY UPDATE
                tuss = NEW.tuss,
                tiss = NEW.tiss,
                descricao = NEW.descricao,
                preco = NEW.preco,
                fabricante = NEW.fabricante,
                anvisa = NEW.anvisa,
                versao_tabela = NEW.versao_tabela,
                data_atualizacao = NEW.data_atualizacao,
                updated_at = NOW();
        END
        """
    )
    op.execute(
        """
        CREATE TRIGGER trg_simpro_item_au
        AFTER UPDATE ON simpro_item
        FOR EACH ROW
        BEGIN
            INSERT INTO insumos_index (origem, item_id, tuss, tiss, descricao, preco, fabricante, anvisa, versao_tabela, data_atualizacao, updated_at)
            VALUES ('SIMPRO', NEW.id, NEW.tuss, NEW.tiss, NEW.descricao, NEW.preco, NEW.fabricante, NEW.anvisa, NEW.versao_tabela, NEW.data_atualizacao, NOW())
            ON DUPLICATE KEY UPDATE
                tuss = NEW.tuss,
                tiss = NEW.tiss,
                descricao = NEW.descricao,
                preco = NEW.preco,
                fabricante = NEW.fabricante,
                anvisa = NEW.anvisa,
                versao_tabela = NEW.versao_tabela,
                data_atualizacao = NEW.data_atualizacao,
                updated_at = NOW();
        END
        """
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute("DROP TRIGGER IF EXISTS trg_simpro_item_au")
    op.execute("DROP TRIGGER IF EXISTS trg_simpro_item_ai")
    op.execute("DROP TRIGGER IF EXISTS trg_bras_item_au")
    op.execute("DROP TRIGGER IF EXISTS trg_bras_item_ai")

    op.drop_table('insumos_index')
    op.drop_index('ix_simpro_item_tuss', table_name='simpro_item')
    op.drop_index('ix_simpro_item_tiss', table_name='simpro_item')
    op.drop_index('ix_simpro_item_descricao', table_name='simpro_item')
    op.drop_index('ix_simpro_item_anvisa', table_name='simpro_item')
    op.drop_table('simpro_item')
    op.drop_index('ix_bras_item_tuss', table_name='bras_item')
    op.drop_index('ix_bras_item_tiss', table_name='bras_item')
    op.drop_index('ix_bras_item_descricao', table_name='bras_item')
    op.drop_index('ix_bras_item_anvisa', table_name='bras_item')
    op.drop_table('bras_item')
    op.drop_table('cbhpm_teto')
    insumo_origem_enum.drop(op.get_bind(), checkfirst=True)
    # ### end Alembic commands ###
